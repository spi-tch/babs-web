name: Build & Deploy

on:
  push:
    branches:
      - staging

env:
  AWS_REGION: eu-west-2
  REPOSITORY: temibabs/babs
  ECS_SERVICE: babs-app
  ECS_CLUSTER: babs-staging
  ECS_TASK_DEFINITION: task-definition.json
  CONTAINER_NAME: babs-app

permissions:
  contents: read

jobs:
  build:
    name: Build and push to Dockerhub
    runs-on: ubuntu-latest
    environment: staging

    outputs:
      image: ${{ steps.build-image.outputs.image }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REPOSITORY }}
        flavor: |
          latest=${{ github.ref == 'refs/heads/staging' }}
          short-sha=${{ startsWith(github.ref, 'refs/tags/') }}

    - name: Build, tag, and push image to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - run: echo ${{ steps.build-image.outputs.image }}

  deploy:
    name: Deploy to Linode
    runs-on: ubuntu-latest
    environment: staging
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        mask-aws-account-id: 'no'
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ needs.build.outputs.image }}
        environment_variables: |
          LOG_LEVEL=error
          BABS_APP_VERSION=0
          DB_HOST=babs-test.cwt37uawctih.eu-west-2.rds.amazonaws.com
          DB_PASS=${{ secrets.DB_PASS }}
          DB_PORT=5432
          DB_SCHEME=postgresql
          DB_USER=${{ secrets.DB_USER }}
          DB_NAME=babs-app
          FLASK_CONFIG=prod
          TWILIO_WA_PHONE_NUMBER=${{ secrets.TWILIO_WA_PHONE_NUMBER }}
          TWILIO_SID=${{ secrets.TWILIO_SID }}
          TWILIO_TOKEN=${{ secrets.TWILIO_TOKEN }}
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
